name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: '35 23 * * *'
  push:
    branches: [ "main" ]
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
      - 'config/*'

env:
  TEST_TAG: ${{ github.repository }}:test
  LATEST_TAG: ${{ github.repository }}:latest


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
    
      - name: Run and test Docker container
        run: |
          apt-get install -y jq 

          # env
          ssh_valid_key='ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICGFHXRG6OxkFaKA2w6Om45oHNYwB1XN7bCHT7tdP0J/ root@e799b2f78a3b'
          ssh_invalid_key='ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII+tNOZ8zcl4MvmdXu/Qx9ArHwX257fMhnjJDFu2xPNOPEINOPE root@d1d832b41cca'
          
          # this was created once and is for testing purpose only
          ssh_private_key='LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFNd0FBQUF0emMyZ3RaVwpReU5UVXhPUUFBQUNBaGhSMTBSdWpzWkJXaWdOc09qcHVPYUJ6V01BZFZ6ZTJ3aDArN1hUOUNmd0FBQUpoMHhYUWdkTVYwCklBQUFBQXR6YzJndFpXUXlOVFV4T1FBQUFDQWhoUjEwUnVqc1pCV2lnTnNPanB1T2FCeldNQWRWemUyd2gwKzdYVDlDZncKQUFBRUFhams5aS9DNGtXMHhJeFJGc2pIbFFQY0VLTmFDVlY3dEZRdndSWXFPVmN5R0ZIWFJHNk94a0ZhS0EydzZPbTQ1bwpITll3QjFYTjdiQ0hUN3RkUDBKL0FBQUFFWEp2YjNSQVpUYzVPV0l5WmpjNFlUTmlBUUlEQkE9PQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K'

          # setup env for docker
          docker network create testing

          # run server
          docker run --rm --name test --network testing -e SSHUSER_test="${ssh_valid_key}" -e SSHUSER_invalid="${ssh_invalid_key}" -d ${{ env.TEST_TAG }}

          # run client
          cat <<- EOF > client_test.sh
          #!/bin/sh

          echo -n $SSHPRIVATE_KEY | base64 -d | install -c -m 400 /dev/stdin key
          ssh -o StrictHostKeyChecking=accept-new -i key test@$test id
          if [[ $? -ne 0 ]]; then echo "login failed"; exit 1; fi
          
          ssh -i key invalid@$test id invalid
          if [[ $? -ne 1 ]]; then echo "invalid user exists - failed"; exit 1; fi

          EOF
          chmod +x client_test.sh

          docker run --rm --name client --network testing --entrypoint "" -e SSHPRIVATE_KEY="${ssh_private_key}" -v $(pwd)/client_test.sh:/client_test.sh ${{ env.TEST_TAG }} /client_test.sh

          if [[ $? -eq 0 ]]; then
            echo "all testes passed"
          fi
            echo "client test failed"
            exit 1
          fi
          

      - name: Build and push and release
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
